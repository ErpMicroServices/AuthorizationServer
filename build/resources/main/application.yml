spring:
  application:
    name: Authorization Server

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: jdbc:postgresql://localhost:5432/people_and_organizations
    username: people_and_organizations
    password: people_and_organizations

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yml

#  security:
#    oauth2:
#      authorizationserver:
#        client:
#          articles-client:
#            registration:
#              client-id: articles-client
#              client-secret: "{noop}secret"
#              client-name: Articles Client
#              client-authentication-methods:
#                - client_secret_basic
#              authorization-grant-types:
#                - authorization_code
#                - refresh_token
#              redirect-uris:
#                - http://127.0.0.1:8080/login/oauth2/code/articles-client-oidc
#                - http://127.0.0.1:8080/authorized
#              scopes:
#                - openid
#                - articles.read
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info

